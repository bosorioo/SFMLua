/************
* Generated with lua2header.lua
* Original source code:
*
* 1 - lua_path = {
* 2 - 	WorkDir .. "?.lua",
* 3 - 	WorkDir .. "?/main.lua",
* 4 - 	WorkDir .. "libs/?.lua",
* 5 - 	WorkDir .. "libs/?/main.lua"
* 6 - }

* 7 - dll_path = {
* 8 - 	WorkDir .. "?.dll",
* 9 - 	WorkDir .. "libs/dlls/?.dll"
* 10 - }

* 11 - if WorkDir ~= ExecDir then
* 12 - 	for index = 1, #lua_path do
* 13 - 		lpath = lua_path[index]
* 14 - 		lua_path[#lua_path + 1] = ExecDir .. string.sub(lpath, #WorkDir + 1)
* 15 - 	end
* 16 - 	for index = 1, #dll_path do
* 17 - 		cpath = dll_path[index]
* 18 - 		dll_path[#dll_path + 1] = ExecDir .. string.sub(cpath, #WorkDir + 1)
* 19 - 	end
* 20 - end

* 21 - package.path = table.concat(lua_path, ';')
* 22 - package.cpath = table.concat(dll_path, ';')

* 23 - function printn(...)
* 24 - 	print()
* 25 - 	print(...)
* 26 - 	local t = {...}
* 27 - 	if type(t[#t]) == 'string' then
* 28 - 		print '\n'
* 29 - 	end
* 30 - 	io.flush()
* 31 - end

* 32 - function printf(str, ...)
* 33 - 	return print(string.format(str, ...))
* 34 - end

* 35 - function printfn(str, ...)
* 36 - 	return printn(string.format(str, ...))
* 37 - end
*
************/

#ifndef SFMLUA_LUA_H
#define SFMLUA_LUA_H

const char lua_script_sfmlua[] = {
	0x6C, 0x75, 0x61, 0x5F, 0x70, 0x61, 0x74, 0x68, 0x20, 0x3D, 0x20, 0x7B,
	0x20, 0x57, 0x6F, 0x72, 0x6B, 0x44, 0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20,
	0x22, 0x3F, 0x2E, 0x6C, 0x75, 0x61, 0x22, 0x2C, 0x20, 0x57, 0x6F, 0x72,
	0x6B, 0x44, 0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20, 0x22, 0x3F, 0x2F, 0x6D,
	0x61, 0x69, 0x6E, 0x2E, 0x6C, 0x75, 0x61, 0x22, 0x2C, 0x20, 0x57, 0x6F,
	0x72, 0x6B, 0x44, 0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20, 0x22, 0x6C, 0x69,
	0x62, 0x73, 0x2F, 0x3F, 0x2E, 0x6C, 0x75, 0x61, 0x22, 0x2C, 0x20, 0x57,
	0x6F, 0x72, 0x6B, 0x44, 0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20, 0x22, 0x6C,
	0x69, 0x62, 0x73, 0x2F, 0x3F, 0x2F, 0x6D, 0x61, 0x69, 0x6E, 0x2E, 0x6C,
	0x75, 0x61, 0x22, 0x20, 0x7D, 0x20, 0x64, 0x6C, 0x6C, 0x5F, 0x70, 0x61,
	0x74, 0x68, 0x20, 0x3D, 0x20, 0x7B, 0x20, 0x57, 0x6F, 0x72, 0x6B, 0x44,
	0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20, 0x22, 0x3F, 0x2E, 0x64, 0x6C, 0x6C,
	0x22, 0x2C, 0x20, 0x57, 0x6F, 0x72, 0x6B, 0x44, 0x69, 0x72, 0x20, 0x2E,
	0x2E, 0x20, 0x22, 0x6C, 0x69, 0x62, 0x73, 0x2F, 0x64, 0x6C, 0x6C, 0x73,
	0x2F, 0x3F, 0x2E, 0x64, 0x6C, 0x6C, 0x22, 0x20, 0x7D, 0x20, 0x69, 0x66,
	0x20, 0x57, 0x6F, 0x72, 0x6B, 0x44, 0x69, 0x72, 0x20, 0x7E, 0x3D, 0x20,
	0x45, 0x78, 0x65, 0x63, 0x44, 0x69, 0x72, 0x20, 0x74, 0x68, 0x65, 0x6E,
	0x20, 0x66, 0x6F, 0x72, 0x20, 0x69, 0x6E, 0x64, 0x65, 0x78, 0x20, 0x3D,
	0x20, 0x31, 0x2C, 0x20, 0x23, 0x6C, 0x75, 0x61, 0x5F, 0x70, 0x61, 0x74,
	0x68, 0x20, 0x64, 0x6F, 0x20, 0x6C, 0x70, 0x61, 0x74, 0x68, 0x20, 0x3D,
	0x20, 0x6C, 0x75, 0x61, 0x5F, 0x70, 0x61, 0x74, 0x68, 0x5B, 0x69, 0x6E,
	0x64, 0x65, 0x78, 0x5D, 0x20, 0x6C, 0x75, 0x61, 0x5F, 0x70, 0x61, 0x74,
	0x68, 0x5B, 0x23, 0x6C, 0x75, 0x61, 0x5F, 0x70, 0x61, 0x74, 0x68, 0x20,
	0x2B, 0x20, 0x31, 0x5D, 0x20, 0x3D, 0x20, 0x45, 0x78, 0x65, 0x63, 0x44,
	0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67,
	0x2E, 0x73, 0x75, 0x62, 0x28, 0x6C, 0x70, 0x61, 0x74, 0x68, 0x2C, 0x20,
	0x23, 0x57, 0x6F, 0x72, 0x6B, 0x44, 0x69, 0x72, 0x20, 0x2B, 0x20, 0x31,
	0x29, 0x20, 0x65, 0x6E, 0x64, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x69, 0x6E,
	0x64, 0x65, 0x78, 0x20, 0x3D, 0x20, 0x31, 0x2C, 0x20, 0x23, 0x64, 0x6C,
	0x6C, 0x5F, 0x70, 0x61, 0x74, 0x68, 0x20, 0x64, 0x6F, 0x20, 0x63, 0x70,
	0x61, 0x74, 0x68, 0x20, 0x3D, 0x20, 0x64, 0x6C, 0x6C, 0x5F, 0x70, 0x61,
	0x74, 0x68, 0x5B, 0x69, 0x6E, 0x64, 0x65, 0x78, 0x5D, 0x20, 0x64, 0x6C,
	0x6C, 0x5F, 0x70, 0x61, 0x74, 0x68, 0x5B, 0x23, 0x64, 0x6C, 0x6C, 0x5F,
	0x70, 0x61, 0x74, 0x68, 0x20, 0x2B, 0x20, 0x31, 0x5D, 0x20, 0x3D, 0x20,
	0x45, 0x78, 0x65, 0x63, 0x44, 0x69, 0x72, 0x20, 0x2E, 0x2E, 0x20, 0x73,
	0x74, 0x72, 0x69, 0x6E, 0x67, 0x2E, 0x73, 0x75, 0x62, 0x28, 0x63, 0x70,
	0x61, 0x74, 0x68, 0x2C, 0x20, 0x23, 0x57, 0x6F, 0x72, 0x6B, 0x44, 0x69,
	0x72, 0x20, 0x2B, 0x20, 0x31, 0x29, 0x20, 0x65, 0x6E, 0x64, 0x20, 0x65,
	0x6E, 0x64, 0x20, 0x70, 0x61, 0x63, 0x6B, 0x61, 0x67, 0x65, 0x2E, 0x70,
	0x61, 0x74, 0x68, 0x20, 0x3D, 0x20, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x2E,
	0x63, 0x6F, 0x6E, 0x63, 0x61, 0x74, 0x28, 0x6C, 0x75, 0x61, 0x5F, 0x70,
	0x61, 0x74, 0x68, 0x2C, 0x20, 0x27, 0x3B, 0x27, 0x29, 0x20, 0x70, 0x61,
	0x63, 0x6B, 0x61, 0x67, 0x65, 0x2E, 0x63, 0x70, 0x61, 0x74, 0x68, 0x20,
	0x3D, 0x20, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x2E, 0x63, 0x6F, 0x6E, 0x63,
	0x61, 0x74, 0x28, 0x64, 0x6C, 0x6C, 0x5F, 0x70, 0x61, 0x74, 0x68, 0x2C,
	0x20, 0x27, 0x3B, 0x27, 0x29, 0x20, 0x66, 0x75, 0x6E, 0x63, 0x74, 0x69,
	0x6F, 0x6E, 0x20, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x6E, 0x28, 0x2E, 0x2E,
	0x2E, 0x29, 0x20, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x28, 0x29, 0x20, 0x70,
	0x72, 0x69, 0x6E, 0x74, 0x28, 0x2E, 0x2E, 0x2E, 0x29, 0x20, 0x6C, 0x6F,
	0x63, 0x61, 0x6C, 0x20, 0x74, 0x20, 0x3D, 0x20, 0x7B, 0x2E, 0x2E, 0x2E,
	0x7D, 0x20, 0x69, 0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x74, 0x5B,
	0x23, 0x74, 0x5D, 0x29, 0x20, 0x3D, 0x3D, 0x20, 0x27, 0x73, 0x74, 0x72,
	0x69, 0x6E, 0x67, 0x27, 0x20, 0x74, 0x68, 0x65, 0x6E, 0x20, 0x70, 0x72,
	0x69, 0x6E, 0x74, 0x20, 0x27, 0x5C, 0x6E, 0x27, 0x20, 0x65, 0x6E, 0x64,
	0x20, 0x69, 0x6F, 0x2E, 0x66, 0x6C, 0x75, 0x73, 0x68, 0x28, 0x29, 0x20,
	0x65, 0x6E, 0x64, 0x20, 0x66, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E,
	0x20, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x66, 0x28, 0x73, 0x74, 0x72, 0x2C,
	0x20, 0x2E, 0x2E, 0x2E, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E,
	0x20, 0x70, 0x72, 0x69, 0x6E, 0x74, 0x28, 0x73, 0x74, 0x72, 0x69, 0x6E,
	0x67, 0x2E, 0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x28, 0x73, 0x74, 0x72,
	0x2C, 0x20, 0x2E, 0x2E, 0x2E, 0x29, 0x29, 0x20, 0x65, 0x6E, 0x64, 0x20,
	0x66, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x70, 0x72, 0x69,
	0x6E, 0x74, 0x66, 0x6E, 0x28, 0x73, 0x74, 0x72, 0x2C, 0x20, 0x2E, 0x2E,
	0x2E, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E, 0x20, 0x70, 0x72,
	0x69, 0x6E, 0x74, 0x6E, 0x28, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2E,
	0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x28, 0x73, 0x74, 0x72, 0x2C, 0x20,
	0x2E, 0x2E, 0x2E, 0x29, 0x29, 0x20, 0x65, 0x6E, 0x64
};

#endif